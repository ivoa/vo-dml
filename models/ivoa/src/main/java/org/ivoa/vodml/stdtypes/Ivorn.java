
package org.ivoa.vodml.stdtypes;
        


      /**
      *  an identifier that can be used as a key to look up in an IVOA registry - see https://www.ivoa.net/documents/IVOAIdentifiers/.
      *  PrimitiveType ivorn :
      *
      *  @author generated by https://github.com/ivoa/vo-dml tools
      */
      
@org.ivoa.vodml.annotation.VoDml(id="ivoa:ivorn", role=org.ivoa.vodml.annotation.VodmlRole.primitiveType)
          

        @org.eclipse.microprofile.openapi.annotations.media.Schema(description="an identifier that can be used as a key to look up in an IVOA registry - see https://www.ivoa.net/documents/IVOAIdentifiers/")
    @jakarta.persistence.Embeddable

    @jakarta.xml.bind.annotation.XmlType( name = "ivorn")
  
      public class Ivorn  implements java.io.Serializable {

        private static final long serialVersionUID = 1L;

        /**  representation */
        @jakarta.xml.bind.annotation.XmlValue
        @jakarta.persistence.Column(name="ivorn")
        protected String value;

        /**
         * Creates a new ivorn Primitive Type instance, wrapping a base type.
         *
         * @param v the value.
         */
        public Ivorn(final String v) {
            this.value = v;
        }
      /**
      * no arg constructor.
      */
      protected Ivorn() {}

      /**
      * copy constructor.
       * @param c the other to copy.
      */
      public Ivorn(Ivorn c)
      {
         this(c.value);
      }

      /**
         * Return the representation of this primitive (value)
         * @return string representation of this primitive( value)
         */
        public final String value() {
            return this.value;
        }

        /**
         * Return the string representation of this primitive value
         * @see #value()
         * @return string representation of this primitive
         */
        @Override
        public final String toString() {
            return value().toString();
        }
              

      }
  