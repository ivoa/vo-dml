create sequence AnObject_SEQ start with 1 increment by 50;
create sequence AstroObject_SEQ start with 1 increment by 50;
create sequence ATest2_SEQ start with 1 increment by 50;
create sequence ATest3_SEQ start with 1 increment by 50;
create sequence ATest4_SEQ start with 1 increment by 50;
create sequence ATest_SEQ start with 1 increment by 50;
create sequence Axis_SEQ start with 1 increment by 50;
create sequence BaseC_SEQ start with 1 increment by 50;
create sequence Child_SEQ start with 1 increment by 50;
create sequence Contained_SEQ start with 1 increment by 50;
create sequence CoordFrame_SEQ start with 1 increment by 50;
create sequence CoordSpace_SEQ start with 1 increment by 50;
create sequence CoordSys_SEQ start with 1 increment by 50;
create sequence LChild_SEQ start with 1 increment by 50;
create sequence LuminosityMeasurement_SEQ start with 1 increment by 50;
create sequence Parent_SEQ start with 1 increment by 50;
create sequence PhotometricSystem_SEQ start with 1 increment by 50;
create sequence PhotometryFilter_SEQ start with 1 increment by 50;
create sequence Refa_SEQ start with 1 increment by 50;
create sequence ReferredLifeCycle_SEQ start with 1 increment by 50;
create sequence ReferredTo1_SEQ start with 1 increment by 50;
create sequence ReferredTo2_SEQ start with 1 increment by 50;
create sequence ReferredTo3_SEQ start with 1 increment by 50;
create sequence ReferredTo_SEQ start with 1 increment by 50;
create sequence SomeContent_SEQ start with 1 increment by 50;
create sequence SourceCatalogue_SEQ start with 1 increment by 50;
create sequence Testing_SEQ start with 1 increment by 50;
create table AnObject (position_dist_value float(53) not null, position_lat_value float(53) not null, position_lon_value float(53) not null, ID bigint not null, coordSys_ID bigint, position_dist_unit_value varchar(255) not null, position_lat_unit_value varchar(255) not null, position_lon_unit_value varchar(255) not null, primary key (ID));
create table AstroCoordSystem (ID bigint not null, primary key (ID));
create table AstroObject (positionError_latError float(53), positionError_longError float(53), positionError_major float(53), positionError_minor float(53), positionError_pa float(53), positionError_radius float(53), position_latitude_value float(53), position_longitude_value float(53), ID bigint not null, SOURCECATALOGUE_ID bigint, frame_name varchar(32), DTYPE varchar(64) not null, description varchar(255), label varchar(255), name varchar(255), position_latitude_unit_value varchar(255), position_longitude_unit_value varchar(255), classification enum ('AGN','GALAXY','PLANET','STAR','UNKNOWN'), primary key (ID));
create table ATest (ID bigint not null, contained2_ID bigint unique, ref1_ID bigint not null, primary key (ID));
create table ATest2 (ID bigint not null, atest_ID bigint unique, refcont_ID bigint not null, primary key (ID));
create table ATest2_ReferredTo (ATest2_ID bigint not null, refagg_ID bigint not null);
create table ATest3 (ID bigint not null, refBad_ID bigint not null, primary key (ID));
create table ATest4 (ID bigint not null, lowr_ID bigint not null, primary key (ID));
create table Axis (COORDSPACE_ID bigint, ID bigint not null, DTYPE varchar(32) not null, name varchar(255), primary key (ID));
create table BaseC (ID bigint not null, SOMECONTENT_ID bigint, DTYPE varchar(64) not null, bname varchar(255) not null, dval varchar(255), evalue varchar(255), primary key (ID));
create table BinnedAxis (length integer not null, ID bigint not null, primary key (ID));
create table CartesianCoordSpace (ID bigint not null, primary key (ID));
create table Child (ID bigint not null, rval_ID bigint not null, primary key (ID));
create table Contained (ATEST3_ID bigint, ATEST_ID bigint, ID bigint not null, refbad2_ID bigint not null, test2 varchar(255) not null, primary key (ID));
create table ContinuousAxis (cyclic boolean, domainMax_value float(53), domainMin_value float(53), ID bigint not null, domainMax_unit_value varchar(255), domainMin_unit_value varchar(255), primary key (ID));
create table CoordFrame (ID bigint not null, DTYPE varchar(32) not null, primary key (ID));
create table CoordSpace (ID bigint not null, DTYPE varchar(32) not null, primary key (ID));
create table CoordSys (ID bigint not null, DTYPE varchar(32) not null, primary key (ID));
create table DiscreteSetAxis (ID bigint not null, primary key (ID));
create table GenericCoordSpace (ID bigint not null, primary key (ID));
create table GenericFrame (ID bigint not null, planetaryEphem varchar(255), primary key (ID));
create table GenericSys (ID bigint not null, primary key (ID));
create table LChild (ival integer not null, lval_ORDER integer, ID bigint not null, PARENT_ID bigint, sval varchar(255) not null, primary key (ID));
create table LuminosityMeasurement (error_value float(53), value_value float(53), ABSTRACTSOURCE_ID bigint, ID bigint not null, filter_ID bigint not null, description varchar(255), error_unit_value varchar(255), value_unit_value varchar(255), type enum ('FLUX','MAGNITUDE') not null, primary key (ID));
create table Parent (dval_dvalr float(53), ID bigint not null, cval_ID bigint unique, dref_ID bigint, rval_ID bigint not null, dval_basestr varchar(255), dval_dvals varchar(255), dval_intatt varchar(255), primary key (ID));
create table PhotometricSystem (detectorType integer not null, ID bigint not null, description varchar(255), primary key (ID));
create table PhotometryFilter (spectralLocation_value float(53) not null, ID bigint not null, PHOTOMETRICSYSTEM_ID bigint, dataValidityFrom timestamp(6) not null, dataValidityTo timestamp(6) not null, bandName varchar(255) not null, description varchar(255) not null, fpsIdentifier varchar(255), name varchar(255) not null, spectralLocation_unit_value varchar(255) not null, primary key (ID));
create table PhysicalCoordSpace (ID bigint not null, primary key (ID));
create table PhysicalCoordSys (ASTROCOORDSYSTEM_ID bigint, ID bigint not null, coordSpace_ID bigint unique, frame_ID bigint unique, primary key (ID));
create table PixelCoordSystem (ID bigint not null, pixelSpace_ID bigint unique, primary key (ID));
create table PixelSpace (ID bigint not null, handedness enum ('LEFT','RIGHT'), primary key (ID));
create table Refa (ID bigint not null, val varchar(255) not null, primary key (ID));
create table Refb (name varchar(255) not null, val varchar(255) not null, primary key (name));
create table ReferredLifeCycle (ATEST_ID bigint, ID bigint not null, test3 varchar(255) not null, primary key (ID));
create table ReferredTo (test1 integer not null, ID bigint not null, primary key (ID));
create table ReferredTo1 (ID bigint not null, sval varchar(255) not null, primary key (ID));
create table ReferredTo2 (ID bigint not null, sval varchar(255) not null, primary key (ID));
create table ReferredTo3 (ID bigint not null, sval varchar(255) not null, primary key (ID));
create table SkyCoordinateFrame (name varchar(32) not null, documentURI varchar(255) not null, equinox varchar(255), system varchar(255), primary key (name));
create table SomeContent (ID bigint not null, ref1_ID bigint not null, ref2_name varchar(255) not null, zval varchar(255) not null, primary key (ID));
create table SourceCatalogue (ID bigint not null, aTestMore_ID bigint unique, aTest_ID bigint unique, name varchar(255) not null, primary key (ID));
create table SpaceFrame (ID bigint not null, equinox varchar(255), planetaryEphem varchar(255), spaceRefFrame varchar(255) not null, primary key (ID));
create table SpaceSys (ID bigint not null, primary key (ID));
create table SphericalCoordSpace (ID bigint not null, primary key (ID));
create table Testing (ID bigint not null, plain varchar(255) not null, unbounded varchar(255), arrayIsh varchar(255) array, primary key (ID));
create table TimeFrame (ID bigint not null, timescale varchar(255) not null, primary key (ID));
create table TimeSys (ID bigint not null, primary key (ID));
alter table if exists AnObject add constraint FK4l6xjnno9496h6g1fn71xj9tt foreign key (coordSys_ID) references CoordSys;
alter table if exists AstroCoordSystem add constraint FK28wxmfbherxidjgoe6jjrgceb foreign key (ID) references CoordSys;
alter table if exists AstroObject add constraint FKrxcsm0yvtd9bymij2ysleats4 foreign key (frame_name) references SkyCoordinateFrame;
alter table if exists AstroObject add constraint FKgjnjy0vatn6kk881g725madii foreign key (SOURCECATALOGUE_ID) references SourceCatalogue;
alter table if exists ATest add constraint FK5oxfju4451xqxgymb214330xs foreign key (contained2_ID) references ATest4;
alter table if exists ATest add constraint FKr6qs7yxpyagpj0o7py9spyk5b foreign key (ref1_ID) references ReferredTo;
alter table if exists ATest2 add constraint FKdoqbr66sj92d51ta0ic44aega foreign key (atest_ID) references ATest;
alter table if exists ATest2 add constraint FK6fv3ysh7m6gnui5ekybfj7898 foreign key (refcont_ID) references ReferredLifeCycle;
alter table if exists ATest2_ReferredTo add constraint FKsclcp9lkarkt1mm6fs5pdhj22 foreign key (refagg_ID) references ReferredTo;
alter table if exists ATest2_ReferredTo add constraint FKipptg4ksmh975sv056ooaptto foreign key (ATest2_ID) references ATest2;
alter table if exists ATest3 add constraint FKpny1lmhxupmt2fboorgctchai foreign key (refBad_ID) references ReferredLifeCycle;
alter table if exists ATest4 add constraint FKs6qhx5ubnmgq1y0n3d3e4lagn foreign key (lowr_ID) references ReferredLifeCycle;
alter table if exists Axis add constraint FKfmveh3kp7lw6j5dqvwgogd479 foreign key (COORDSPACE_ID) references CoordSpace;
alter table if exists BaseC add constraint FKimvtfgqd2e8f8ts0qdo5od8he foreign key (SOMECONTENT_ID) references SomeContent;
alter table if exists BinnedAxis add constraint FKbus8g6he9onlnv0sh7k32jyy8 foreign key (ID) references Axis;
alter table if exists CartesianCoordSpace add constraint FK2xy5uvghip2j2iyesudy27v27 foreign key (ID) references PhysicalCoordSpace;
alter table if exists Child add constraint FKlp052ji9t0dsypg6lt8p2x9lt foreign key (rval_ID) references ReferredTo2;
alter table if exists Contained add constraint FKohmtfedsg3f3uk98cejs90ujw foreign key (refbad2_ID) references ReferredLifeCycle;
alter table if exists Contained add constraint FK18tn5yk1w5lknew30hsrdhq20 foreign key (ATEST3_ID) references ATest3;
alter table if exists Contained add constraint FK17s61rkjmsmu8jnwq1feg4nx0 foreign key (ATEST_ID) references ATest;
alter table if exists ContinuousAxis add constraint FKght0k6jrebrx4nr27abighc34 foreign key (ID) references Axis;
alter table if exists DiscreteSetAxis add constraint FK5qg4wwcja8emqcrfw5scyhfdr foreign key (ID) references Axis;
alter table if exists GenericCoordSpace add constraint FKijluvatg728uh2psoqmx6daks foreign key (ID) references PhysicalCoordSpace;
alter table if exists GenericFrame add constraint FKmdhtt5ycaiir737q6lupt887y foreign key (ID) references CoordFrame;
alter table if exists GenericSys add constraint FKbnuahwo699rlcyod2vuq1e541 foreign key (ID) references PhysicalCoordSys;
alter table if exists LChild add constraint FKbpji587l8mtjws0usvchk5de0 foreign key (PARENT_ID) references Parent;
alter table if exists LuminosityMeasurement add constraint FK6whf47cg1i3je3ylhgas69ib7 foreign key (filter_ID) references PhotometryFilter;
alter table if exists LuminosityMeasurement add constraint FKqdst9y9x0ods4wplrt9qw6hy foreign key (ABSTRACTSOURCE_ID) references AstroObject;
alter table if exists Parent add constraint FKnh8fptuat5jgxx0e37tejtmy0 foreign key (cval_ID) references Child;
alter table if exists Parent add constraint FKsrl05f1milt6o6gen5yeyp9h7 foreign key (dref_ID) references ReferredTo3;
alter table if exists Parent add constraint FK6fcjqq2kna6rdqrmqxl8itte4 foreign key (rval_ID) references ReferredTo1;
alter table if exists PhotometryFilter add constraint FK8wso70v67t2igf2vjlinfd9vn foreign key (PHOTOMETRICSYSTEM_ID) references PhotometricSystem;
alter table if exists PhysicalCoordSpace add constraint FKruer3897c1hgkbxfks7b88plq foreign key (ID) references CoordSpace;
alter table if exists PhysicalCoordSys add constraint FKa5k2oirbe77qxk4sqp7h4k3kg foreign key (coordSpace_ID) references PhysicalCoordSpace;
alter table if exists PhysicalCoordSys add constraint FK356txw7gaeihecoa9w50cvkgs foreign key (frame_ID) references CoordFrame;
alter table if exists PhysicalCoordSys add constraint FKdevrhvim7i1dfo48fup3iw66 foreign key (ID) references CoordSys;
alter table if exists PhysicalCoordSys add constraint FKnsvknfkohm01plqribl0dcid3 foreign key (ASTROCOORDSYSTEM_ID) references AstroCoordSystem;
alter table if exists PixelCoordSystem add constraint FKh7vds8pjgr00du8b3obdaxuro foreign key (pixelSpace_ID) references PixelSpace;
alter table if exists PixelCoordSystem add constraint FKsjsb5yrkbx3o0xp2tge2iji8x foreign key (ID) references CoordSys;
alter table if exists PixelSpace add constraint FKtoilbwrrxshwuotgvev57yy2c foreign key (ID) references CoordSpace;
alter table if exists ReferredLifeCycle add constraint FKpaxb33s8iu3iw1omj9cmyq73r foreign key (ATEST_ID) references ATest;
alter table if exists SomeContent add constraint FKg0r291mbs50ka6tnqji6228ty foreign key (ref1_ID) references Refa;
alter table if exists SomeContent add constraint FKo7xjph52at2m3438d6ia48by0 foreign key (ref2_name) references Refb;
alter table if exists SourceCatalogue add constraint FKq1j3xac8uimjiljdahc96uqt6 foreign key (aTest_ID) references Testing;
alter table if exists SourceCatalogue add constraint FKrqevpifgx1wgeyrscn0vsyuj4 foreign key (aTestMore_ID) references Testing;
alter table if exists SpaceFrame add constraint FKjytcqpd7s0r4e1knmabbnk9vm foreign key (ID) references CoordFrame;
alter table if exists SpaceSys add constraint FK8bd52r7pyc4v2s4uf7das38d9 foreign key (ID) references PhysicalCoordSys;
alter table if exists SphericalCoordSpace add constraint FKrk9l38xawuwitgybto1bdr3tr foreign key (ID) references PhysicalCoordSpace;
alter table if exists TimeFrame add constraint FK9g2xjfj94hue36rw4t6hpinp9 foreign key (ID) references CoordFrame;
alter table if exists TimeSys add constraint FK8hecwb4s4pqr2kvgsw5niep9e foreign key (ID) references PhysicalCoordSys;
