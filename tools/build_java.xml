<!-- 
    build_java.xml file : specific targets for java code
-->  
  <target name="init.jaxb" >
    <fail unless="jaxb.dir" message="Must specify jaxb.dir in build .properties before JAXB can be used"/>
    <fileset id="jaxbfiles" dir="${jaxb.dir}" >
      
      <!-- JAXB 2.2.3 reference implementation -->
      <include name="jaxb-api.jar" />
      <include name="jaxb-impl.jar" />
      <!-- XJC includes (xml) catalog resolver : com.sun.org.apache.xml.internal.resolver -->
      <include name="jaxb-xjc.jar" />
      <!-- JAXB 2.2 RI dependencies -->
      <include name="activation.jar" />
      <include name="jsr173_1.0_api.jar" />
    </fileset>
  <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" >
    <classpath>
      <fileset dir="${jaxb.dir}" includes="*.jar" />
    </classpath>
  </taskdef>
  </target>
<!-- libraries for base module -->


  <path id="ext.class.path">
    <fileset refid="jaxbfiles"/>
    <fileset refid="jarfiles"/>
  </path>


<path id="src.class.path">
  <fileset refid="jarfiles"/>
  <fileset refid="jaxbfiles"/>
  <pathelement location="${build}/${build.jaxb.jar}"/>
</path>

<path id="gen.class.path">
  <fileset refid="jarfiles"/>
  <fileset refid="jaxbfiles"/>
  <pathelement location="${build}/${build.jaxb.jar}"/>
  <pathelement location="${build}/${build.src.jar}"/>
</path>


<!-- targets -->


<!-- target cleanJava : clean build files -->
<target name="cleanJava" >
  <echo>cleaning directory : ${build} ...</echo>
  
  <delete includeemptydirs="true" verbose="true">
    <fileset dir="${build}">
      <exclude name="README.txt" />
    </fileset>
  </delete>
  
  <echo>cleaned directory : ${build} : done.</echo>
</target>

<!-- compiles java files and jar them and compiles MetaModel generated by JAXB 2.1 -->
<target name="compile" depends="cleanJava,init.jaxb">
  <echo>compile VO-URP infrastructure support classes ...</echo>
  <echo>compile from : ${sources}</echo>
  <echo>compile to   : ${build.src}</echo>
  <echo> </echo>
  <echo> </echo>
  <echo> </echo>
  <echo>               NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE</echo>
  <echo>               NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE</echo>
  <echo>Before building infrastructure, move generated classes from ivoa model to java/src !!!</echo>
  <echo>               NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE</echo>
  <echo>               NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE</echo>
  <echo> </echo>
  <echo> </echo>

  <mkdir dir="${build}"/>
  <mkdir dir="${build.jaxb}" />
  
  <javac sourcepath="" srcdir="${jaxb}" destdir="${build.jaxb}" listfiles="false" 
         fork="true" verbose="false" encoding="UTF-8"
         debug="on" deprecation="on" optimize="on" casesensitive="true" 
         source="1.6" target="1.6"
         includeantruntime="false" >
    <compilerarg value="-Djava.endorsed.dirs=${jaxb.dir}"/>
    <classpath refid="ext.class.path" />
    
    <include name="**/*.java"/>
  </javac> 

  <!--  delete spurious package-info.class files generated in wrong directory by javacc -->
  <delete includeemptydirs="true" verbose="false">
    <fileset dir="${build.jaxb}">
      <include name="src/**" />
    </fileset>
  </delete>
  
  <jar jarfile="${build}/${build.jaxb.jar}" compress="true" roundup="true">
    <fileset dir="${build.jaxb}" >
      <exclude name="src/**"/>
    </fileset>
  </jar>

  <mkdir dir="${build.src}"/>
  <javac sourcepath="" srcdir="${sources}" destdir="${build.src}" listfiles="false" 
         fork="true" verbose="false" encoding="UTF-8"
         debug="on" deprecation="on" optimize="on" casesensitive="true" 
         source="1.6" target="1.6"
         includeantruntime="false" >
    
    <classpath refid="src.class.path" />

    <include name="**/*.java"/>
  </javac> 
  
  
  <jar jarfile="${build}/vo-dml.src.jar" compress="true" roundup="true">
    <fileset dir="${build.src}" />
  </jar>
  
  <echo>compile VO-URP infrastructure support classes : done.</echo>
</target>



<!-- Compile generated java files -->
<target name="compileOutput" depends="init.jaxb">
  <echo>compile from : ${java.gen}/src</echo>
  <echo>compile to   : ${build.gen}</echo>
  
  <mkdir dir="${build.gen}"/>

  <javac sourcepath="" srcdir="${java.gen}/src" destdir="${build.gen}" listfiles="false" 
         fork="true" verbose="false" encoding="UTF-8"
         debug="on" deprecation="on" optimize="on" casesensitive="true" 
         source="1.6" target="1.6"
         includeantruntime="false" >
    
    <classpath refid="gen.class.path" />
    
    <include name="**/*.java"/>
  </javac>


  <jar jarfile="${build}/${build.gen.jar}" compress="true" roundup="true">
    <fileset dir="${build.gen}" />
    <fileset file="${mapping.file}" /> 
  </jar>

</target>


	<target name="interpretVOTable"> 

		<java classname="org.ivoa.vodml.mapping.Main">
		  <classpath>
		  	<pathelement path="${classpath}"/>
		  	<fileset refid="jarfiles"/>
		  	<fileset refid="jaxbfiles"/>
		    <fileset dir="${build}" includes="*.jar" />
		  </classpath>
				<arg value="${in}"/>
      <arg value="${mapping.file}"/>
			<arg value="${in}.DM-I.xml"/>
      <arg value="${mode}"/>
		</java>
	</target>


  <target name="xjc-vo-dml_xsd" depends="init.jaxb">
    <xjc schema="${xsd}/vo-dml-v1.0.xsd" destdir="${jaxb}/src" package="org.ivoa.vodml.jaxb"/>
  </target>
  
  <target name="xjc-other" depends="init.jaxb">
    <xjc schema="${xsd}/vo-dml.mapping.xsd" destdir="${jaxb}/src" package="org.ivoa.vodml.mapping.jaxb"/>
    <xjc schema="${xsd}/vo-dml-instance.xsd" destdir="${jaxb}/src" package="org.ivoa.vodml.instance.jaxb"
      extension="true" binding="${jaxb}/vodmli_xjcConfig.xml"/>
    <xjc schema="${xsd}/ext/VOTable-1.3_vodml.xsd" destdir="${jaxb}/ext-src" package="org.ivoa.votable.jaxb"
      extension="true" binding="${jaxb}/votable_xjcConfig.xml"/>

  </target>
  
  <target name="xjc-reg" depends="init.jaxb">
    <xjc schema="${xsd}/ext/vosi-v1.xml" destdir="${jaxb}/ext-src" package="org.ivoa.registry.jaxb"
      extension="true"/><!-- binding="${jaxb}/vosi_xjcConfig.xml"/> -->
  </target>


<!-- end of build_java.xml -->  

  &buildJalopy; 
  